{"version":3,"sources":["App.tsx","index.tsx"],"names":["INITIAL_RADIAL_OFFSET","Math","PI","App","useTweaks","numCirclesPerGroup","value","min","max","step","circleGap","innerCircleRadius","numGroups","useWindowSize","windowWidth","width","windowHeight","height","circles","group","radialOffset","i","radius","cosine","cos","sine","sin","cx","cy","push","stroke","strokeWidth","r","fillOpacity","className","fill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAKMA,EAAwBC,KAAKC,GAAK,EAuDzBC,MArDf,WAcE,IAdc,IAAD,EAMTC,YAAU,CACZC,mBAAoB,CAAEC,MAAO,GAAIC,IAAK,EAAGC,IAAK,GAAIC,KAAM,GACxDC,UAAW,CAAEJ,MAAO,EAAGC,IAAK,EAAGC,IAAK,IAAKC,KAAM,GAC/CE,kBAAmB,CAAEL,MAAO,GAAIC,IAAK,EAAGC,IAAK,IAAKC,KAAM,GACxDG,UAAW,CAAEN,MAAO,EAAGC,IAAK,EAAGC,IAAK,GAAIC,KAAM,KAR9CJ,EAFW,EAEXA,mBACAK,EAHW,EAGXA,UACAC,EAJW,EAIXA,kBACAC,EALW,EAKXA,UALW,EAYwCC,cAAtCC,EAZF,EAYLC,MAA4BC,EAZvB,EAYeC,OACtBC,EAAuB,GACpBC,EAAQ,EAAGA,EAAQP,EAAWO,IAGrC,IAFA,IAAMC,EACJpB,EAAiC,EAARmB,EAAYlB,KAAKC,GAAMU,EACzCS,EAAI,EAAGA,EAAIhB,EAAoBgB,IAAK,CAC3C,IAAMC,EAASX,EAAoB,SAAAU,EAAK,KAAMX,EACxCa,EAAStB,KAAKuB,IAAIJ,GAClBK,EAAOxB,KAAKyB,IAAIN,GAGhBO,EAAKb,EAAc,EAAIS,EAASD,GAFpBC,EAASZ,EAGrBiB,EAAKZ,EAAe,EAAIS,EAAOH,GAFnBG,EAAOd,EAGzBO,EAAQW,KACN,wBAEEC,OAAO,OACPC,YAAa,EACbC,EAAGV,EACHK,GAAIA,EACJC,GAAIA,EACJK,YAAa,GANRd,EAAQd,EAAqBgB,IAW1C,OACE,qBAAKa,UAAU,MAAf,SACE,sBAAKjB,OAAQD,EAAcD,MAAOD,EAAlC,UACE,wBACEqB,KAAK,OACLH,EAAGrB,EACHgB,GAAIb,EAAc,EAClBc,GAAIZ,EAAe,IAEpBE,QCjDTkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bbd6d8c3.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport { useWindowSize } from 'react-use';\nimport { useTweaks } from 'use-tweaks';\nimport './App.css';\n\nconst INITIAL_RADIAL_OFFSET = Math.PI / 6;\n\nfunction App() {\n  const {\n    numCirclesPerGroup,\n    circleGap,\n    innerCircleRadius,\n    numGroups,\n  } = useTweaks({\n    numCirclesPerGroup: { value: 12, min: 1, max: 40, step: 1 },\n    circleGap: { value: 2, min: 0, max: 100, step: 1 },\n    innerCircleRadius: { value: 20, min: 1, max: 100, step: 1 },\n    numGroups: { value: 6, min: 2, max: 90, step: 1 },\n  }) as any; // having to force any otherwise an error about \"does not exist on type\"\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  const circles: ReactNode[] = [];\n  for (let group = 0; group < numGroups; group++) {\n    const radialOffset =\n      INITIAL_RADIAL_OFFSET + (group * 2 * Math.PI) / numGroups;\n    for (let i = 0; i < numCirclesPerGroup; i++) {\n      const radius = innerCircleRadius + i ** 1.6 * circleGap;\n      const cosine = Math.cos(radialOffset);\n      const sine = Math.sin(radialOffset);\n      const cxOffset = -cosine * innerCircleRadius;\n      const cyOffset = -sine * innerCircleRadius;\n      const cx = windowWidth / 2 + cosine * radius + cxOffset;\n      const cy = windowHeight / 2 + sine * radius + cyOffset;\n      circles.push(\n        <circle\n          key={group * numCirclesPerGroup + i}\n          stroke=\"#fff\"\n          strokeWidth={1}\n          r={radius}\n          cx={cx}\n          cy={cy}\n          fillOpacity={0}\n        ></circle>\n      );\n    }\n  }\n  return (\n    <div className=\"App\">\n      <svg height={windowHeight} width={windowWidth}>\n        <circle\n          fill=\"#fff\"\n          r={innerCircleRadius}\n          cx={windowWidth / 2}\n          cy={windowHeight / 2}\n        ></circle>\n        {circles}\n      </svg>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}